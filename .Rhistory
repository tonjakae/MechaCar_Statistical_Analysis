demo_table2 <- fromJSON(txt='demo.json')
install.packages("tidyverse")
install.packages("jsonlite")
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
library(jsonlite)
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
setwd("C:/Users/tonja/Class/Module 15/MechaCar_Statistical_Analysis")
library(dplyr)
library(tidyverse)
mecha_mpg <- read.csv(file='./Resources/MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
View(mecha_mpg)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecha_mpg)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecha_mpg)
data_mecha
summary(lm(mpg ~ vehicle_length))
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecha_mpg))
mecha_coil <- read.csv(file='./Resources/Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
total_summary <- mecha_coil %>% summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI),
Var_PSI=var(PSI),
Std_Dev_PSI=sd(PSI),
Num_Coil=n(), .groups = 'keep')
View(mecha_mpg)
View(mecha_coil)
View(total_summary)
lot_summary <- mecha_coil  %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI),
Var_PSI=var(PSI),
Std_Dev_PSI=sd(PSI),
Num_Coil=n(), .groups = 'keep')
View(lot_summary)
t.test(mecha_coil$PSI,mu=1500)
lot1 <- subset(mecha_coil, Manufacturing_Lot=="Lot1")
lot2 <- subset(mecha_coil, Manufacturing_Lot=="Lot2")
lot3 <- subset(mecha_coil, Manufacturing_Lot=="Lot3")
View(lot1)
View(lot2)
View(lot3)
t.test(lot1$PSI,mu=1500)
t.test(lot2$PSI,mu=1500)
t.test(lot3$PSI,mu=1500)
View(lot1)
View(lot2)
View(lot3)
#Deliverable 1
#Import and read in the MechaCar_mpg.csv file as a dataframe.
mechacar_table <- read.csv(file='MechaCar_mpg.csv')
#Use the library() function to load the dplyr package.
library(dplyr)
#Perform linear regression using the lm() function
lm(mpg~vehicle_length + ground_clearance+vehicle_weight+spoiler_angle+AWD,data = mechacar_table)
#Using the summary() function, determine the p-value and the r-squared value for the linear regression model.
summary(lm(mpg~vehicle_length + ground_clearance+vehicle_weight+spoiler_angle+AWD,data = mechacar_table))
#Deliverable 2
# import and read in the Suspension_Coil.csv file as a table.
coil_table<- read.csv(file='Suspension_Coil.csv')
#  creates a total_summary dataframe using the summarize() function to get the mean, median, variance, and standard deviation of the suspension coil's PSI column
total_summary<- coil_table%>%summarize('Mean' = mean(PSI),'Median'=median(PSI),'Variance'=var(PSI),'SD'= sd(PSI))
#  creates a lot_summary dataframe using the group_by() and the summarize() functions to group each manufacturing lot by the mean, median, variance, and standard deviation
lot_summary<- coil_table%>% group_by(Manufacturing_Lot)%>%summarize('Mean' = mean(PSI),'Median'=median(PSI),'Variance'=var(PSI),'SD'= sd(PSI))
# Deliverable 3
# determine if the PSI across all manufacturing lots is statistically different from the population mean of 1,500 pounds per square inch.
t.test(coil_table$PSI,mu=1500)
# Perform t-test on Lot 1
t.test(subset(coil_table,Manufacturing_Lot=="Lot1")$PSI,mu = 1500)
# Perform t-test on Lot 2
t.test(subset(coil_table,Manufacturing_Lot=="Lot2")$PSI,mu = 1500)
# Perform t-test on Lot 3
t.test(subset(coil_table,Manufacturing_Lot=="Lot3")$PSI,mu = 1500)
coil_table<- read.csv(file='Suspension_Coil.csv')
View(lot_summary)
View(lot1)
View(lot2)
View(lot3)
View(mecha_coil)
View(mecha_mpg)
View(total_summary)
